type: edu
custom_name: stage4
files:
- name: test/EncryptDecryptTest.java
  visible: false
  text: |
    import encryptdecrypt.Main;
    import org.hyperskill.hstest.v6.stage.BaseStageTest;
    import org.hyperskill.hstest.v6.testcase.CheckResult;
    import org.hyperskill.hstest.v6.testcase.TestCase;

    import java.util.List;

    public class EncryptDecryptTest extends BaseStageTest<String> {
        public EncryptDecryptTest() throws Exception {
            super(Main.class);
        }

        @Override
        public List<TestCase<String>> generate() {
            return List.of(
                new TestCase<String>()
                    .addArguments(
                        "-mode", "enc",
                        "-key", "5",
                        "-data", "Welcome to hyperskill!"
                    )
                    .setAttach("\\jqhtrj%yt%m~ujwxpnqq&"),

                new TestCase<String>()
                    .addArguments(
                        "-key", "0",
                        "-mode", "enc",
                        "-data", "Hello"
                    )
                    .setAttach("Hello"),

                new TestCase<String>()
                    .addArguments(
                        "-key", "1",
                        "-data", "012345678",
                        "-mode", "enc"
                    )
                    .setAttach("123456789"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "dec",
                        "-data", "\\jqhtrj%yt%m~ujwxpnqq&",
                        "-key", "5"
                    )
                    .setAttach("Welcome to hyperskill!"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "dec",
                        "-key", "0",
                        "-data", "Hi"
                    )
                    .setAttach("Hi"),

                new TestCase<String>()
                    .addArguments(
                        "-mode", "dec",
                        "-key", "1",
                        "-data", "222233334444"
                    )
                    .setAttach("111122223333")
            );
        }

        @Override
        public CheckResult check(String reply, String clue) {
            return new CheckResult(reply.trim().equals(clue.trim()));
        }
    }
  learner_created: false
- name: src/encryptdecrypt/Main.java
  visible: true
  text: |
    package encryptdecrypt;

    import java.util.Scanner;

    public class Main {
        public static void main(String[] args) {
            Scanner sc = new Scanner(System.in);
            String mode = sc.nextLine();
            String str = sc.nextLine();
            int mod = sc.nextInt();

            if (mode.equals("enc")) {
                enc(str, mod);
            } else {
                dec(str, mod);
            }
        }

        private static void enc(String str, int mod) {
            String abc = " !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~";
            String result = "";
            for (int i = 0; i < str.length(); i++) {
                for (int j = 0; j < abc.length(); j++) {
                    if (str.substring(i, i+1).equals(abc.substring(j, j+1))) {
                        int fract = (j+mod)%abc.length();
                        result = result + abc.substring(fract, fract+1);
                        break;
                    }
                }
            }
            System.out.println(result);
        }

        private static void dec(String str, int mod) {
            String abc = " !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~";
            String result = "";
            for (int i = 0; i < str.length(); i++) {
                for (int j = 0; j < abc.length(); j++) {
                    if (str.substring(i, i+1).equals(abc.substring(j, j+1))) {
                        int fract = (j-mod)%abc.length();
                        result = result + abc.substring(fract, fract+1);
                        break;
                    }
                }
            }
            System.out.println(result);
        }
    }
  learner_created: false
feedback_link: https://hyperskill.org/projects/46/stages/248/implement
status: Solved
record: 2
